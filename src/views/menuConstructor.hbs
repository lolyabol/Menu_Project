<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Конструктор меню</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }

        #app {
            max-width: 800px;
            margin: auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
        }

        #ingredients-container,
        #dishes-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px; 
        }

        .ingredient-card,
        .dish-card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            padding: 15px;
            width: calc(33% - 20px); 
            box-sizing: border-box; 
        }

        .ingredient-card img,
        .dish-card img {
            max-width: 100%;
            border-radius: 4px; 
        }

        .ingredient-card label {
            font-weight: bold;
        }

        .ingredient-card.selected {
            border: 2px solid #007BFF; 
        }

        button {
            display: block;
            width: 100%;
            padding: 10px;
            margin-top: 20px;
            background-color: #007BFF; 
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3; 
        }

        .dish-details {
            display: none; 
        }
    </style>
</head>
<body>
    <div id="app">
        <h1>Конструктор меню</h1>
        <div id="ingredients-container"></div>
        <button id="fetch-dishes">Показать блюда</button>
        <div id="dishes-container"></div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"></script>
    <script>
        const selectedIngredients = [];

        async function renderIngredients() {
           const ingredientsContainer = document.getElementById('ingredients-container');
           ingredientsContainer.innerHTML = '';

           try {
               console.log('Запрос ингредиентов...');
               const response = await fetch('/ingredients');
               if (!response.ok) {
                   console.error('Ошибка при получении ингредиентов:', response.statusText);
                   throw new Error('Ошибка при получении ингредиентов');
               }
               const ingredients = await response.json();
               console.log('Ингредиенты получены:', ingredients);

               ingredients.forEach(ingredient => {
                   const card = document.createElement('div');
                   card.className = 'ingredient-card';
                   card.innerHTML = `
                       <label>${ingredient.name}</label>
                       <p>Калории: ${ingredient.calories}</p>
                       <img src="${ingredient.imageURL}" alt="${ingredient.name}" />
                       <input type="checkbox" onchange="toggleSelection(this)" value="${ingredient._id}" style="display:none;">
                   `;
                   card.onclick = function() {
                       const checkbox = card.querySelector('input[type="checkbox"]');
                       checkbox.checked = !checkbox.checked;
                       toggleSelection(checkbox); 
                       card.classList.toggle('selected'); 
                   };
                   ingredientsContainer.appendChild(card);
               });
           } catch (error) {
               console.error('Ошибка при получении ингредиентов:', error);
               ingredientsContainer.innerHTML = 'Ошибка при получении ингредиентов.';
           }
       }

       function toggleSelection(checkbox) {
           const ingredientId = checkbox.value;
           if (checkbox.checked) {
               selectedIngredients.push(ingredientId);
               console.log(`Ингредиент добавлен: ${ingredientId}`);
           } else {
               const index = selectedIngredients.indexOf(ingredientId);
               if (index > -1) {
                   selectedIngredients.splice(index, 1);
                   console.log(`Ингредиент удален: ${ingredientId}`);
               }
           }
       }

       async function fetchDishes() {
           if (selectedIngredients.length === 0) {
               document.getElementById('dishes-container').innerHTML = 'Выберите ингредиенты!';
               return;
           }

           try {
               const response = await fetch('/dishes/filter', { 
                   method: 'POST',
                   headers: { 'Content-Type': 'application/json' },
                   body: JSON.stringify({ ingredients: selectedIngredients })
               });

               if (!response.ok) {
                   throw new Error(`Сервер вернул ошибку: ${response.statusText}`);
               }

               const dishes = await response.json();
               renderDishes(dishes);
           } catch (error) {
               console.error('Ошибка при получении блюд:', error);
               document.getElementById('dishes-container').innerHTML = 'Ошибка при получении блюд.';
           }
       }

       function renderDishes(dishes) {
    const dishesContainer = document.getElementById('dishes-container');
    dishesContainer.innerHTML = '';

    if (dishes.length === 0) { 
        dishesContainer.innerHTML = 'Нет блюд для выбранных ингредиентов.'; 
        return; 
    } 

    dishes.forEach(dish => { 
        const card = document.createElement('div'); 
        card.className = 'dish-card'; 

        const collapsedView = document.createElement('div');
        collapsedView.innerHTML =
            `<img src="${dish.imageURL}" alt="${dish.name}" style="max-height:100px;width:auto;border-radius:4px;margin-bottom:10px;" />  
            <h3>${dish.name}</h3>`;
        collapsedView.style.cursor = "pointer"; 

        const detailsDiv = document.createElement('div');
        detailsDiv.className = 'dish-details';
        detailsDiv.style.display = 'none'; 
        detailsDiv.innerHTML =
            `<img src="${dish.imageURL}" alt="${dish.name}" style="max-height:100px;width:auto;border-radius:4px;margin-bottom:10px;"
            <p>Калории: ${dish.calories}</p>  
            <p>${dish.description || 'Описание отсутствует.'}</p>  
            <h4>Рецепт:</h4>  
            <p>${dish.recipe}</p>  
            <h4>Ингредиенты:</h4>
            <p>${dish.ingredientsList.map(item => `${item.quantity}г. ингредиента "${item.ingredientId.name}"`).join('<br>')}</p>`; 

        card.onclick = function() {
            if (detailsDiv.style.display === 'none') { 
                detailsDiv.style.display = 'block'; 
                collapsedView.style.display = 'none'; 
            } else { 
                detailsDiv.style.display = 'none'; 
                collapsedView.style.display = 'block'; 
            }
        };

        card.appendChild(collapsedView); 
        card.appendChild(detailsDiv); 

        dishesContainer.appendChild(card); 
    }); 
}
       renderIngredients(); 

       document.getElementById('fetch-dishes').addEventListener('click', fetchDishes); 

    </script>
</body>
</html>